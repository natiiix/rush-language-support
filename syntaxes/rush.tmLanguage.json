{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Rush",
	"patterns": [{
			"include": "#comment"
		},
		{
			"include": "#keyword"
		},
		{
			"include": "#language-type"
		},
		{
			"include": "#constant-bool"
		},
		{
			"include": "#constant-int"
		},
		{
			"include": "#constant-int"
		},
		{
			"include": "#constant-float"
		},
		{
			"include": "#access-modifier"
		},
		{
			"include": "#access-modifier"
		},
		{
			"include": "#type-definition"
		},
		{
			"include": "#namespace"
		},
		{
			"include": "#include"
		},
		{
			"include": "#character"
		},
		{
			"include": "#string"
		},
		{
			"include": "#raw-string"
		},
		{
			"include": "#regex"
		},
		{
			"include": "#function"
		},
		{
			"include": "#template"
		},
		{
			"include": "#type-name"
		},
		{
			"include": "#operator"
		}
	],
	"repository": {
		"comment": {
			"name": "comment.line.rush",
			"begin": "//",
			"end": "$",
			"patterns": []
		},
		"keyword": {
			"name": "keyword.control.rush",
			"match": "\\b(if|else|while|for|break|continue|return|using|switch|case|default|throw)\\b",
			"patterns": []
		},
		"language-type": {
			"name": "storage.type.language.rush",
			"match": "\\b(void|int|bool|char|float|double)\\b",
			"patterns": []
		},
		"constant-bool": {
			"name": "constant.language.rush",
			"match": "\\b(true|false)\\b",
			"patterns": []
		},
		"constant-int": {
			"name": "constant.numeric.integer.rush",
			"match": "(?<=\\W)(\\d+([uU]?[lL]{0,2}|[lL]{0,2}[uU]?)|0b[01]+|0x\\x+)(?=\\W)",
			"patterns": []
		},
		"constant-float": {
			"name": "constant.numeric.float.rush",
			"match": "(?<=\\W)\\d+.\\d+f?(?=\\W)",
			"patterns": []
		},
		"access-modifier": {
			"name": "storage.modifier.rush",
			"match": "\\b(private|protected|public):|\\b(const|static|inline)\\b",
			"patterns": []
		},
		"type-definition": {
			"match": "\\b(class|struct|enum)\\s+(\\w+)\\b",
			"captures": {
				"1": {
					"name": "storage.type.rush"
				},
				"2": {
					"name": "entity.name.type.rush"
				}
			},
			"patterns": []
		},
		"namespace": {
			"match": "\\b(namespace)\\s+(\\w+)",
			"captures": {
				"1": {
					"name": "storage.type.rush"
				},
				"2": {
					"name": "entity.name.type.rush"
				}
			},
			"patterns": []
		},
		"include": {
			"match": "(#include)\\s+((?:\\<|\")?[^\\<\\>\"]+(?:\\>|\")?)",
			"captures": {
				"1": {
					"name": "keyword.control.import.rush"
				},
				"2": {
					"name": "string.quoted.other.rush"
				}
			},
			"patterns": []
		},
		"character": {
			"name": "string.quoted.single.rush",
			"begin": "'",
			"end": "'",
			"patterns": [{
				"name": "constant.character.escape.rush",
				"match": "\\\\."
			}]
		},
		"string": {
			"name": "string.quoted.double.rush",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.rush",
				"match": "\\\\."
			}]
		},
		"raw-string": {
			"name": "string.quoted.other.raw.rush",
			"begin": "`",
			"end": "`",
			"patterns": []
		},
		"regex": {
			"name": "string.regexp.rush",
			"begin": "/",
			"end": "/",
			"patterns": [{
				"name": "constant.character.escape.rush",
				"match": "\\\\."
			}]
		},
		"function": {
			"name": "entity.name.function.rush",
			"match": "(\\w+::)*\\w+(?=\\s*\\()",
			"patterns": []
		},
		"template": {
			"name": "storage.type.rush",
			"match": "\\btemplate(?=\\s*\\<)",
			"patterns": []
		},
		"type-name": {
			"name": "entity.name.type.rush",
			"match": "\\<((\\w+::)*\\w+\\s*,\\s*)*(\\w+::)*\\w+\\>|\\<?((\\w+::)+\\w+|::\\w+)\\>?|\\w+(?=\\s+\\w+)",
			"patterns": []
		},
		"operator": {
			"name": "keyword.operator.rush",
			"match": "\\+|-|\\*|/|%|=|!|&|\\|",
			"patterns": []
		}
	},
	"scopeName": "source.rush"
}
